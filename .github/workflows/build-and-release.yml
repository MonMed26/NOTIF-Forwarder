name: Build and Release

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main ]
  release:
    types: [ created ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: 'false'
        type: boolean

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # - name: Run tests
    #   run: ./gradlew test

    - name: Build debug APK
      run: ./gradlew assembleDebug

    - name: Build release APK
      run: ./gradlew assembleRelease

    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: sms-forwarder-debug
        path: app/build/outputs/apk/debug/*.apk

    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: sms-forwarder-release
        path: app/build/outputs/apk/release/*.apk

    - name: Generate build info
      run: |
        echo "Build Date: $(date)" > build-info.txt
        echo "Commit SHA: ${{ github.sha }}" >> build-info.txt
        echo "Branch: ${{ github.ref_name }}" >> build-info.txt
        echo "Workflow: ${{ github.workflow }}" >> build-info.txt

    - name: Upload build info
      uses: actions/upload-artifact@v4
      with:
        name: build-info
        path: build-info.txt

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == 'true') || startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download release APK
      uses: actions/download-artifact@v4
      with:
        name: sms-forwarder-release
        path: ./release

    - name: Download debug APK
      uses: actions/download-artifact@v4
      with:
        name: sms-forwarder-debug
        path: ./debug

    - name: Download build info
      uses: actions/download-artifact@v4
      with:
        name: build-info
        path: ./

    - name: Get version from gradle
      id: get_version
      run: |
        VERSION=$(grep "versionName" app/build.gradle.kts | head -1 | sed 's/.*"\(.*\)".*/\1/')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"

    - name: Generate release notes
      id: release_notes
      run: |
        cat > release_notes.md << 'EOF'
        ## SMS Forwarder v${{ steps.get_version.outputs.version }}
        
        ### Features
        - 📱 Forward SMS messages to HTTP endpoints
        - 🔧 Pattern-based rule matching (regex support)
        - 📊 Complete forwarding history tracking
        - 🔍 Comprehensive debugging features
        - ⚙️ Background SMS monitoring
        - 🚀 Auto-start on device boot
        
        ### Debug Features
        - Track ALL received SMS messages (matching and non-matching)
        - Visual indicators for rule matching
        - Enhanced logging for troubleshooting
        - Statistics dashboard
        
        ### Installation
        1. Download the APK file below
        2. Enable "Install from unknown sources" in Android settings
        3. Install the APK
        4. Grant SMS permissions when prompted
        
        ### Build Information
        $(cat build-info.txt)
        
        ---
        **Note**: This is an unsigned APK. For production use, consider signing the APK with your own keystore.
        EOF

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}-${{ github.run_number }}
        release_name: SMS Forwarder v${{ steps.get_version.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: false

    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release/app-release-unsigned.apk
        asset_name: sms-forwarder-v${{ steps.get_version.outputs.version }}-release.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload Debug APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./debug/app-debug.apk
        asset_name: sms-forwarder-v${{ steps.get_version.outputs.version }}-debug.apk
        asset_content_type: application/vnd.android.package-archive

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' || github.event_name == 'pull_request'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run dependency check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'sms-forwarder'
        path: '.'
        format: 'HTML'

    - name: Upload security scan results
      uses: actions/upload-artifact@v4
      with:
        name: security-scan-results
        path: reports/

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run lint
      run: ./gradlew lint

    - name: Upload lint results
      uses: actions/upload-artifact@v4
      with:
        name: lint-results
        path: app/build/reports/lint-results-debug.html 