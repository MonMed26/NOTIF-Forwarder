{
  "formatVersion": 1,
  "database": {
    "version": 4,
    "identityHash": "d96ad2723cf7e31e459b8a26a36e42f8",
    "entities": [
      {
        "tableName": "rules",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `name` TEXT NOT NULL, `pattern` TEXT NOT NULL, `source` TEXT NOT NULL, `package_filter` TEXT, `is_regex` INTEGER NOT NULL, `endpoint` TEXT NOT NULL, `method` TEXT NOT NULL, `headers` TEXT NOT NULL, `is_active` INTEGER NOT NULL, `created_at` INTEGER NOT NULL, `updated_at` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pattern",
            "columnName": "pattern",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "source",
            "columnName": "source",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "packageFilter",
            "columnName": "package_filter",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "isRegex",
            "columnName": "is_regex",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endpoint",
            "columnName": "endpoint",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "method",
            "columnName": "method",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "headers",
            "columnName": "headers",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isActive",
            "columnName": "is_active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "created_at",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updated_at",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "forwarding_history",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `rule_id` INTEGER, `matched_rule` INTEGER NOT NULL, `sender_number` TEXT, `message_body` TEXT NOT NULL, `source_type` TEXT NOT NULL, `source_package` TEXT, `source_app_name` TEXT, `notification_title` TEXT, `notification_text` TEXT, `endpoint` TEXT, `method` TEXT, `request_headers` TEXT NOT NULL, `request_body` TEXT, `response_code` INTEGER, `response_body` TEXT, `status` TEXT NOT NULL, `error_message` TEXT, `timestamp` INTEGER NOT NULL, `forwarded_at` INTEGER, FOREIGN KEY(`rule_id`) REFERENCES `rules`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "ruleId",
            "columnName": "rule_id",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "matchedRule",
            "columnName": "matched_rule",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "senderNumber",
            "columnName": "sender_number",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "messageBody",
            "columnName": "message_body",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourceType",
            "columnName": "source_type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "sourcePackage",
            "columnName": "source_package",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "sourceAppName",
            "columnName": "source_app_name",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notificationTitle",
            "columnName": "notification_title",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "notificationText",
            "columnName": "notification_text",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "endpoint",
            "columnName": "endpoint",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "method",
            "columnName": "method",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "requestHeaders",
            "columnName": "request_headers",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "requestBody",
            "columnName": "request_body",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "responseCode",
            "columnName": "response_code",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "responseBody",
            "columnName": "response_body",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "errorMessage",
            "columnName": "error_message",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "timestamp",
            "columnName": "timestamp",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "forwardedAt",
            "columnName": "forwarded_at",
            "affinity": "INTEGER",
            "notNull": false
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_forwarding_history_rule_id",
            "unique": false,
            "columnNames": [
              "rule_id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_forwarding_history_rule_id` ON `${TABLE_NAME}` (`rule_id`)"
          },
          {
            "name": "index_forwarding_history_timestamp",
            "unique": false,
            "columnNames": [
              "timestamp"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_forwarding_history_timestamp` ON `${TABLE_NAME}` (`timestamp`)"
          },
          {
            "name": "index_forwarding_history_source_type",
            "unique": false,
            "columnNames": [
              "source_type"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_forwarding_history_source_type` ON `${TABLE_NAME}` (`source_type`)"
          },
          {
            "name": "index_forwarding_history_status",
            "unique": false,
            "columnNames": [
              "status"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_forwarding_history_status` ON `${TABLE_NAME}` (`status`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "rules",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "rule_id"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'd96ad2723cf7e31e459b8a26a36e42f8')"
    ]
  }
}